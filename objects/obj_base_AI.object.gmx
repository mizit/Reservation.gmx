<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>my_speed = 6;
direction = random(360);
speed = my_speed;
nodes = obj_ground_control.nodes;
gx = real_to_grid_x(x);
gy = real_to_grid_y(y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gx = real_to_grid_x(x);
gy = real_to_grid_y(y);
var top = 0, left = 0;
if (nodes[# gx - 1, gy] == NODE.BORDER) || (nodes[# gx - 1, gy] == NODE.DEATH)
{
    left++;
}
if (nodes[# gx + 1, gy] == NODE.BORDER) || (nodes[# gx + 1, gy] == NODE.DEATH)
{
    left--;
}
if (nodes[# gx - 1, gy - 1] == NODE.BORDER) || (nodes[# gx - 1, gy - 1] == NODE.DEATH)
{
    left++;
    top++;
}
if (nodes[# gx - 1, gy + 1] == NODE.BORDER) || (nodes[# gx - 1, gy + 1] == NODE.DEATH)
{
    left++;
    top--;
}
if (nodes[# gx + 1, gy - 1] == NODE.BORDER) || (nodes[# gx + 1, gy - 1] == NODE.DEATH)
{
    left--;
    top++;
}
if (nodes[# gx + 1, gy + 1] == NODE.BORDER) || (nodes[# gx + 1, gy + 1] == NODE.DEATH)
{
    left--;
    top--;
}
if (nodes[# gx, gy - 1] == NODE.BORDER) || (nodes[# gx, gy - 1] == NODE.DEATH)
{
    top++;
}
if (nodes[# gx, gy + 1] == NODE.BORDER) || (nodes[# gx, gy + 1] == NODE.DEATH)
{
    top--;
}
if (left &gt; 0)
{
    hspeed = abs(hspeed);
    direction += random_range(-5, 5);
}
if (left &lt; 0)
{
    hspeed = -abs(hspeed);
    direction += random_range(-5, 5);
}
if (top &gt; 0)
{
    vspeed = abs(vspeed);
    direction += random_range(-5, 5);
}
if (top &lt; 0)
{
    vspeed = -abs(vspeed);
    direction += random_range(-5, 5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
